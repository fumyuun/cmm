#!/bin/bash

START_CMD=""
KILL_CMD=""
PS_DENY_LIST=""
X_DENY_LIST=""
POLL_DELAY=""

if [ -r "$HOME/.config/cmm.conf" ]; then
  START_CMD=$(grep "^[ \t]*start[ \t]*=" "$HOME/.config/cmm.conf" | cut -d '=' -f2)
  KILL_CMD=$(grep "^[ \t]*kill[ \t]*=" "$HOME/.config/cmm.conf" | cut -d '=' -f2)
  PS_DENY_LIST=$(grep "^[ \t]*ps-deny-list[ \t]*=" "$HOME/.config/cmm.conf" | cut -d '=' -f2)
  X_DENY_LIST=$(grep "^[ \t]*x-deny-list[ \t]*=" "$HOME/.config/cmm.conf" | cut -d '=' -f2)
  POLL_DELAY=$(grep "^[ \t]*poll-delay[ \t]*=" "$HOME/.config/cmm.conf" | cut -d '=' -f2)
fi

[ -n "$CMM_START_CMD"    ] && START_CMD="$CMM_START_CMD"
[ -n "$CMM_KILL_CMD"     ] && KILL_CMD="$CMM_KILL_CMD"
[ -n "$CMM_PS_DENY_LIST" ] && X_DENY_LIST="$CMM_X_DENY_LIST"
[ -n "$CMM_X_DENY_LIST"  ] && PS_DENY_LIST="$CMM_PS_DENY_LIST"
[ -n "$CMM_POLL_DELAY"   ] && POLL_DELAY="$CMM_POLL_DELAY"

ACTION=""

while [[ $# -gt 0 ]]; do
  key="$1"
  case "$key" in
  -h|--help)
    HELP=1
    shift
    ;;
  -s|--start)
    START_CMD="$2"
    shift
    shift
    ;;
  -k|--kill)
    KILL_CMD="$2"
    shift
    shift
    ;;
  -d|--poll-delay)
    POLL_DELAY="$2"
    shift
    shift
    ;;
  -p|--ps-deny)
    PS_DENY_LIST="$2"
    shift
    shift
    ;;
  -x|--x-deny)
    X_DENY_LIST="$2"
    shift
    shift
    ;;
  -v|--verbose)
    VERBOSE=1
    shift
    ;;
  *)
    ACTION="$1"
    shift
    ;;
  esac
done

if [ $HELP ]; then
  echo "Usage: $0 [-h |--help] [-s | --start <start_cmd>] [-k | --kill <kill_cmd>] [-p | --ps-deny <deny_list>] [-x | --x-deny <deny_list>] [-d | --poll-delay <delay>] <action>"
  echo "Automatically start- or stop compositioning manager depending on a deny-list of other programs"
  echo "Where:"
  echo "  -h | --help               : Print this help"
  echo "  -v | --verbose            : increase verbosity"
  echo "  <action>                  : one of start, stop, status, inhibit, release"
  echo "The following flags are only relevant for the 'start' action"
  echo "  -s | --start <start_cmd>  : Command to start compositioning manager with"
  echo "  -k | --kill <kill_cmd>    : Command to kill compositioning manager with (defaults to pkill the first word of <start_cmd>)"
  echo "  -p | --ps-deny <deny_list>: Comma-separated list of process names to watch out for"
  echo "  -x | --x-deny <deny_list> : Comma-separated list of X window titles to watch out for"
  echo "  -d | --poll-delay <delay> : Interval in seconds to poll, defaults to 1 (once every second)"
  exit 0
fi

case "$ACTION" in
start)
  ;;
stop)
  if [ ! -d /tmp/cmm -o ! -r /tmp/cmm/pid -o ! -r /tmp/cmm/status ]; then
    echo "Not running"
  else
    kill -s INT $(cat /tmp/cmm/pid)
    exit 0
  fi
  ;;
status|inhibit|release)
  if [ ! -d /tmp/cmm -o ! -r /tmp/cmm/pid -o ! -r /tmp/cmm/status ]; then
    echo "Not running"
  else
    [ "$ACTION" == "status"  ] && cat /tmp/cmm/status
    [ "$ACTION" == "inhibit" ] && echo "1" > /tmp/cmm/inhibit
    [ "$ACTION" == "release" ] && echo "0" > /tmp/cmm/inhibit
  fi
  exit 0
  ;;
*)
  [ -z "$ACTION" ] && echo "Missing action argument" || echo "Invalid action argument $ACTION"
  exit 1
esac

CM_CMD=$(echo "$START_CMD" | cut -d ' ' -f1)

PS_DENY_LIST=$(echo "$PS_DENY_LIST" | sed 's/,/|/')
X_DENY_LIST=$(echo "$X_DENY_LIST" | sed 's/,/|/')

[ -z "$POLL_DELAY" ] && POLL_DELAY="1"

if [ -z "$START_CMD" ]; then
  echo "Start command not set"
  exit 1
fi

if [ -z "$PS_DENY_LIST" -a -z "$X_DENY_LIST" ]; then
  echo "Deny list is empty"
  exit 1
fi

if [ -z "$KILL_CMD" ]; then
  echo "Kill command not set, assuming killall -q $CM_CMD"
  KILL_CMD="killall -q $CM_CMD"
fi

[ ! -d /tmp/cmm ] && mkdir /tmp/cmm

if [ -r /tmp/cmm/pid ]; then
  echo "cmm already running (pid $(cat /tmp/cmm/pid)? If crashed, please remove /tmp/cmm/pid and run again"
  exit 0
fi

if [ $VERBOSE ]; then
  echo "Start command: '$START_CMD'"
  echo "Kill command: '$KILL_CMD'"
  echo "PS deny list: '$PS_DENY_LIST'"
  echo "X deny list: '$X_DENY_LIST'"
fi

echo "$$" > /tmp/cmm/pid
trap "rm /tmp/cmm/pid; $KILL_CMD; exit 0" INT

echo "Running, inactive" > /tmp/cmm/status
echo "0" > /tmp/cmm/inhibit

while true; do
  inhibited=$(cat /tmp/cmm/inhibit)
  cm_running=$(pgrep "$CM_CMD")

  ps_deny_running=$(pgrep "$PS_DENY_LIST")
  x_deny_running=$(xwininfo -root -children -all | grep "$X_DENY_LIST")

  [ -n "$PS_DENY_LIST" -a -n "$ps_deny_running" ] && deny_running=1
  [ -n "$X_DENY_LIST"  -a -n "$x_deny_running"  ] && deny_running=1

  # Stop if either deny-list is active OR inhibited
  must_stop=0
  [ -n "$cm_running" -a -n "$deny_running" ] && must_stop=1
  [ -n "$cm_running" -a $inhibited -eq 1   ] && must_stop=1

  if [ $must_stop -eq 1 ]; then
    [ $VERBOSE ] && echo "[$(date +%T)] Killing CM: '$KILL_CMD'"
    echo "Running, inactive" > /tmp/cmm/status
    eval $KILL_CMD
  fi

  # Start if both deny-list is inactive AND not inhibited
  must_start=0
  [ -z "$cm_running" -a -z "$deny_running" -a $inhibited -eq 0 ] && must_start=1

  if [ $must_start -eq 1 ]; then
    [ $VERBOSE ] && echo "[$(date +%T)] Starting CM: '$START_CMD'"
    echo "Running, active" > /tmp/cmm/status
    eval "$START_CMD &"
  fi

  sleep "$POLL_DELAY"
done
